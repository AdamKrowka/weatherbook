{"version":3,"sources":["Components/CitySearchField.js","Components/SearchCity.js","Components/Chart.js","Components/Table.js","Utils/user.js","Components/CityInfo.js","Utils/WeatherData.js","Components/Logged.js","Components/Login.js","Components/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginRight","spacing","relative","position","width","display","justifyContent","absolute","backgroundColor","zIndex","color","wrapper","alignItems","flexDirection","marginBottom","CitySearchField","cities","setSelectedCity","classes","useState","inputValue","setInputValue","cityFilter","setCityFilter","cityMenu","setCityMenu","useEffect","filter","val","index","name","toLowerCase","startsWith","cityList","i","push","MenuItem","key","value","onClick","city","ClickAwayListener","onClickAway","className","TextField","id","label","autoComplete","onChange","e","target","onFocus","length","Paper","MenuList","minHeight","breakpoints","up","borderRadius","height","input","margin","flexWrap","icon","flexGrow","inp","textInput","paddingTop","overflowY","down","button","borderWidth","SearchCity","activeCity","setActiveCity","CityList","map","Button","variant","withWidth","dt","weatherData","data","labels","Date","getHours","temp","toFixed","size","isWidthUp","datasets","fill","borderColor","options","legend","container","row","flex","head","fontWeight","tile","img","maxHeight","getDayofWeek","getDay","getDate","SimpleTable","shift","dataRows","src","weather","alt","main","day","night","humidity","pressure","users","login","password","state","country","coord","lon","lat","isOnList","userID","find","u","c","accountBar","cityInfo","avatar","palette","getContrastText","blue","innerContainer","padding","darkBgContainer","chart","header","date","fontSize","table","star","top","right","Cityinfo","handleLogOut","addCity","deleteCity","today","current","toString","split","slice","join","Avatar","text","Chart","hourly","daily","getData","a","fetch","then","res","json","innerWrapper","gridContainer","citySearch","cityData","notLogged","Logged","user","history","setUser","useHistory","selectedCity","setWeatherData","setCityList","dataAsync","interval","setInterval","clearInterval","Grid","item","xs","sm","CityInfo","findIndex","splice","title","form","Login","errors","setErrors","setLogin","setPassword","noValidate","error","type","validate","notFound","PageNotFound","appWrapper","boxSizing","fontFamily","App","basename","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3c7eafeb.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Paper,\r\n  MenuItem,\r\n  MenuList,\r\n  TextField,\r\n  ClickAwayListener,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  relative: {\r\n    position: \"relative\",\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  absolute: {\r\n    position: \"absolute\",\r\n    width: \"100%\",\r\n    backgroundColor: \"#1a214a\",\r\n    zIndex: 100,\r\n    color: \"white\",\r\n  },\r\n  wrapper: {\r\n    // width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    flexDirection: \"column\",\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst CitySearchField = ({ cities, setSelectedCity }) => {\r\n  const classes = useStyles();\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [cityFilter, setCityFilter] = useState([]);\r\n  const [cityMenu, setCityMenu] = useState([]);\r\n  const handleChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSelectCity = (city) => {\r\n    setSelectedCity(city);\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setCityFilter(\r\n      cities.filter((val, index) => {\r\n        if (inputValue !== \"\")\r\n          return val.name.toLowerCase().startsWith(inputValue.toLowerCase());\r\n        return false;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setCityFilter(\r\n      cities.filter((val, index) => {\r\n        if (inputValue !== \"\")\r\n          return val.name.toLowerCase().startsWith(inputValue.toLowerCase());\r\n        return false;\r\n      })\r\n    );\r\n  }, [inputValue]);\r\n  useEffect(() => {\r\n    setCityMenu(() => {\r\n      const cityList = [];\r\n      for (let i = 0; i < 10; i++) {\r\n        if (cityFilter[i] != null)\r\n          cityList.push(\r\n            <MenuItem\r\n              key={i}\r\n              value={cityFilter[i]}\r\n              onClick={() => handleSelectCity(cityFilter[i])}\r\n            >\r\n              {cityFilter[i].name}\r\n            </MenuItem>\r\n          );\r\n      }\r\n      return cityList;\r\n    });\r\n  }, [cityFilter]);\r\n  return (\r\n    <ClickAwayListener\r\n      onClickAway={() => {\r\n        setCityFilter([]);\r\n      }}\r\n    >\r\n      <div className={classes.wrapper}>\r\n        <TextField\r\n          id=\"standard-basic\"\r\n          label=\"City\"\r\n          value={inputValue}\r\n          autoComplete=\"off\"\r\n          onChange={handleChange}\r\n          onFocus={handleFocus}\r\n        ></TextField>\r\n        {cityFilter.length !== 0 ? (\r\n          <div className={classes.relative}>\r\n            <Paper className={classes.absolute}>\r\n              <MenuList>{cityFilter.length !== 0 ? cityMenu : null}</MenuList>\r\n            </Paper>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </ClickAwayListener>\r\n  );\r\n};\r\n\r\nexport default CitySearchField;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport CitySearchField from \"./CitySearchField.js\";\r\nimport cities from \"../Utils/city.list.json\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  wrapper: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    minHeight: \"100%\",\r\n    backgroundColor: \"#dff5ff\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      borderRadius: 20,\r\n      height: \"100%\",\r\n    },\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    backgroundColor: \"white\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 30,\r\n    margin: theme.spacing(3),\r\n    color: \"#757575\",\r\n    flexWrap: \"nowrap\",\r\n  },\r\n  icon: { flexGrow: 0 },\r\n  inp: { flexGrow: 1 },\r\n  textInput: {\r\n    color: \"#757575\",\r\n  },\r\n  cityList: {\r\n    backgroundColor: \"white\",\r\n    borderRadius: 20,\r\n    paddingTop: theme.spacing(2),\r\n    width: \"80%\",\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    height: \"50vh\",\r\n    overflowY: \"scroll\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      height: \"30vh\",\r\n      overflowY: \"scroll\",\r\n    },\r\n  },\r\n  button: {\r\n    borderWidth: 2,\r\n    width: \"90%\",\r\n    borderRadius: 10,\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SearchCity = ({ cityList, activeCity, setActiveCity }) => {\r\n  const classes = useStyles();\r\n  const [cityListBtn] = useState(cityList);\r\n  const setSelectedCity = (city) => {\r\n    setActiveCity(city);\r\n  };\r\n\r\n  const CityList = cityListBtn.map((city, index) => {\r\n    if (cityList)\r\n      return (\r\n        <Button\r\n          key={index}\r\n          variant=\"outlined\"\r\n          color={activeCity === city.id ? \"primary\" : \"default\"}\r\n          className={classes.button}\r\n          value={city.id}\r\n          onClick={(e) => {\r\n            setActiveCity(city);\r\n          }}\r\n        >\r\n          {city.name}\r\n        </Button>\r\n      );\r\n    return <></>;\r\n  });\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <CitySearchField\r\n        cities={cities}\r\n        setSelectedCity={setSelectedCity}\r\n      ></CitySearchField>\r\n      <div className={classes.cityList}>{CityList}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchCity;\r\n","import React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport withWidth, { isWidthUp } from \"@material-ui/core/withWidth\";\r\n\r\nconst getLabel = (dt) =>\r\n  `${new Date(dt * 1000).getHours() < 10 ? \"0\" : \"\"}${new Date(\r\n    dt * 1000\r\n  ).getHours()}:00`;\r\n\r\nfunction MyComponent({ weatherData, width }) {\r\n  const data = {\r\n    labels: [],\r\n    data: [],\r\n  };\r\n  for (let i = 0; i < 24; i++) {\r\n    data.labels.push(getLabel(weatherData[i].dt));\r\n    data.data.push(weatherData[i].temp.toFixed());\r\n  }\r\n\r\n  const size = isWidthUp(\"lg\", width) ? 3 : 6;\r\n  return (\r\n    <Line\r\n      width={12}\r\n      height={size}\r\n      data={{\r\n        labels: data.labels,\r\n        datasets: [\r\n          {\r\n            fill: false,\r\n            label: \"temperature in °C\",\r\n            data: data.data,\r\n            backgroundColor: \"rgba(255, 206, 86, 0.2)\",\r\n            borderColor: \"rgba(255, 206, 86, 1)\",\r\n            borderWidth: 3,\r\n          },\r\n        ],\r\n      }}\r\n      options={{ legend: { display: false } }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default withWidth()(MyComponent);\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // overflowX: \"scroll\",\r\n    color: \"black\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    width: \"90%\",\r\n    height: \"100%\",\r\n    backgroundColor: \"#dff5ff\",\r\n    borderRadius: \"0px 0px 20px 20px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  row: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n  },\r\n  head: {\r\n    display: \"flex\",\r\n    flex: 1,\r\n    fontWeight: \"bold\",\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  tile: {\r\n    // paddingLeft: theme.spacing(1),\r\n    flex: 1,\r\n    display: \"flex\",\r\n  },\r\n  img: {\r\n    maxHeight: \"30px\",\r\n  },\r\n}));\r\n\r\nconst getDate = (dt) => new Date(dt * 1000).getDay();\r\n\r\nconst getDayofWeek = (dt) =>\r\n  [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\",\r\n  ][getDate(dt)];\r\n\r\nexport default function SimpleTable({ data }) {\r\n  const classes = useStyles();\r\n  data.shift();\r\n  const dataRows = data.map((row, index) => (\r\n    <div key={index} className={classes.row}>\r\n      <div className={classes.tile}>{getDayofWeek(row.dt)}</div>\r\n      <div className={classes.tile}>\r\n        <img\r\n          className={classes.img}\r\n          src={`http://openweathermap.org/img/wn/${row.weather[0].icon}@2x.png`}\r\n          alt={`${row.weather[0].main}`}\r\n        />\r\n        {row.weather[0].main}\r\n      </div>\r\n      <div className={classes.tile}>{row.temp.day.toFixed()}°C</div>\r\n      <div className={classes.tile}>{row.temp.night.toFixed()}°C</div>\r\n      <div className={classes.tile}>{row.humidity}%</div>\r\n      <div className={classes.tile}>{row.pressure}hpa</div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.head}>\r\n        <div className={classes.tile}>Day</div>\r\n        <div className={classes.tile}>Weather</div>\r\n        <div className={classes.tile}>Day</div>\r\n        <div className={classes.tile}>Night</div>\r\n        <div className={classes.tile}>Humidity</div>\r\n        <div className={classes.tile}>Pressure</div>\r\n      </div>\r\n      {dataRows}\r\n    </div>\r\n  );\r\n}\r\n","const users = [\r\n  {\r\n    id: 1,\r\n    login: \"admin\",\r\n    password: \"admin\",\r\n    cities: [\r\n      {\r\n        id: 759734,\r\n        name: \"Rzeszów\",\r\n        state: \"\",\r\n        country: \"PL\",\r\n        coord: {\r\n          lon: 21.99901,\r\n          lat: 50.041321,\r\n        },\r\n      },\r\n      {\r\n        id: 6695624,\r\n        name: \"Warszawa\",\r\n        state: \"\",\r\n        country: \"PL\",\r\n        coord: {\r\n          lon: 21.04191,\r\n          lat: 52.23547,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const validate = (login, password) => {\r\n  const user = users.find(\r\n    (user) => user.login === login && user.password === password\r\n  );\r\n  if (user) return { id: user.id, login: user.login, cities: user.cities };\r\n  return null;\r\n};\r\n\r\nexport const addCity = (city, userID) => {\r\n  const user = users.find((u) => u.id === userID);\r\n  user.cities.push(city);\r\n  return user.cities;\r\n};\r\n\r\nexport const deleteCity = (city, userID) => {\r\n  const user = users.find((u) => u.id === userID);\r\n  const index = user.cities.findIndex((c) => c.id === city.id);\r\n  user.cities.splice(index, 1);\r\n\r\n  return user.cities;\r\n};\r\n\r\nexport const isOnList = (city, userID) => {\r\n  const user = users.find((u) => u.id === userID);\r\n  const index = user.cities.find((c) => c.id === city.id);\r\n  return index ? true : false;\r\n};\r\n","import React from \"react\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport Chart from \"./Chart.js\";\r\nimport Table from \"./Table.js\";\r\nimport { isOnList } from \"../Utils/user.js\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  accountBar: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    alignItems: \"center\",\r\n  },\r\n  cityInfo: {\r\n    display: \"flex\",\r\n    flexGrow: 1,\r\n    color: \"white\",\r\n  },\r\n\r\n  button: {\r\n    borderRadius: 50,\r\n    margin: theme.spacing(1),\r\n  },\r\n  avatar: {\r\n    color: theme.palette.getContrastText(blue[500]),\r\n    backgroundColor: blue[500],\r\n  },\r\n  innerContainer: {\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: theme.spacing(5),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: \"65vh\",\r\n      padding: 0,\r\n    },\r\n  },\r\n  darkBgContainer: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    position: \"relative\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#1a214a\",\r\n    borderRadius: 20,\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  chart: {\r\n    width: \"80%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  header: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  date: {\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  temp: { fontSize: \"5rem\" },\r\n  table: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    flex: 1,\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      padding: 0,\r\n    },\r\n  },\r\n  star: {\r\n    position: \"absolute\",\r\n    top: theme.spacing(1),\r\n    right: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Cityinfo = ({\r\n  weatherData,\r\n  city,\r\n  handleLogOut,\r\n  userID,\r\n  addCity,\r\n  deleteCity,\r\n}) => {\r\n  const classes = useStyles();\r\n  const handleClick = () => {\r\n    isOnList(city, userID) ? deleteCity(city) : addCity(city);\r\n  };\r\n\r\n  let today = \"\";\r\n  if (weatherData) {\r\n    const date = new Date(weatherData.current.dt * 1000);\r\n    today = date.toString().split(\" \").slice(0, 4).join(\" \");\r\n  }\r\n  return (\r\n    <div className={classes.container}>\r\n      <div className={classes.accountBar}>\r\n        <Avatar className={classes.avatar}>A</Avatar>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleLogOut}\r\n        >\r\n          LOG OUT\r\n        </Button>\r\n      </div>\r\n      <div className={classes.cityInfo}>\r\n        <div className={classes.innerContainer}>\r\n          <div className={classes.darkBgContainer}>\r\n            <div className={classes.star}>\r\n              <Button variant=\"outlined\" color=\"primary\" onClick={handleClick}>\r\n                {isOnList(city, userID) ? \"Delete\" : \"Observe\"}\r\n              </Button>\r\n            </div>\r\n            <div className={classes.header}>Today</div>\r\n            <div className={classes.date}>{today}</div>\r\n            <div className={classes.temp}>\r\n              {weatherData ? (\r\n                <img\r\n                  className={classes.img}\r\n                  src={`http://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`}\r\n                  alt={`${weatherData.current.weather[0].main}`}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n              {weatherData ? weatherData.current.temp.toFixed() : 0}°C\r\n              {weatherData ? (\r\n                <img\r\n                  className={classes.img}\r\n                  src={`http://openweathermap.org/img/wn/${weatherData.current.weather[0].icon}@2x.png`}\r\n                  alt={`${weatherData.current.weather[0].main}`}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div className={classes.text}>{city.name}</div>\r\n            <div className={classes.chart}>\r\n              {weatherData ? (\r\n                <Chart weatherData={weatherData.hourly}></Chart>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n            <div className={classes.table}>\r\n              {weatherData ? <Table data={weatherData.daily}></Table> : <></>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cityinfo;\r\n","const APIKEY = \"c68dd49b4150a92e79f8a0254fd0d999\";\r\n\r\nexport const getData = async (city) => {\r\n  const data = await fetch(\r\n    `https://api.openweathermap.org/data/2.5/onecall?lat=${city.coord.lat}&lon=${city.coord.lon}&units=metric&appid=${APIKEY}`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((json) => json);\r\n  return data;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport SearchCity from \"./SearchCity.js\";\r\nimport CityInfo from \"./CityInfo.js\";\r\nimport { getData } from \"../Utils/WeatherData.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCity, deleteCity } from \"../Utils/user.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  innerWrapper: {\r\n    backgroundColor: \"#dff5ff\",\r\n    width: \"1200px\",\r\n    height: \"80vh\",\r\n    borderRadius: 20,\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: \"100vh\",\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  gridContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: \"100vh\",\r\n    },\r\n  },\r\n  citySearch: {},\r\n  cityData: {},\r\n  notLogged: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nfunction Logged({ user, setUser }) {\r\n  const history = useHistory();\r\n  const [selectedCity, setSelectedCity] = useState({\r\n    id: 6695624,\r\n    name: \"Warszawa\",\r\n    state: \"\",\r\n    country: \"PL\",\r\n    coord: {\r\n      lon: 21.04191,\r\n      lat: 52.23547,\r\n    },\r\n  });\r\n  const [weatherData, setWeatherData] = useState();\r\n  const [cityList, setCityList] = useState(user ? user.cities : []);\r\n  const handleLogOut = () => {\r\n    history.push(\"/\");\r\n  };\r\n  useEffect(() => {\r\n    const dataAsync = async () => {\r\n      const data = await getData(selectedCity);\r\n      setWeatherData(data);\r\n    };\r\n    dataAsync();\r\n  }, [selectedCity]);\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const dataAsync = async () => {\r\n        const data = await getData(selectedCity);\r\n        setWeatherData(data);\r\n      };\r\n      dataAsync();\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [selectedCity]);\r\n\r\n  const handleAddCity = (city) => {\r\n    setCityList(addCity(city, user.id));\r\n    setSelectedCity({ ...selectedCity });\r\n  };\r\n  const handleDeleteCity = (city) => {\r\n    setCityList(deleteCity(city, user.id));\r\n    setSelectedCity({ ...selectedCity });\r\n  };\r\n  const classes = useStyles();\r\n  if (user)\r\n    return (\r\n      <div className={classes.innerWrapper}>\r\n        <Grid container className={classes.gridContainer}>\r\n          <Grid className={classes.cityData} item xs={12} sm={9}>\r\n            <CityInfo\r\n              weatherData={weatherData}\r\n              city={selectedCity}\r\n              handleLogOut={handleLogOut}\r\n              userID={1}\r\n              addCity={handleAddCity}\r\n              deleteCity={handleDeleteCity}\r\n            ></CityInfo>\r\n          </Grid>\r\n          <Grid className={classes.citySearch} item xs={12} sm={3}>\r\n            <SearchCity\r\n              cityList={cityList}\r\n              activeCity={selectedCity.id}\r\n              setActiveCity={setSelectedCity}\r\n            ></SearchCity>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  return (\r\n    <div className={classes.innerWrapper}>\r\n      <div className={classes.notLogged}>\r\n        <h1>You are not logged in</h1>\r\n        <Button variant=\"outlined\" onClick={handleClick}>\r\n          Log in\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logged;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Button } from \"@material-ui/core\";\r\nimport { validate } from \"../Utils/user.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  innerWrapper: {\r\n    backgroundColor: \"#dff5ff\",\r\n    width: \"1200px\",\r\n    height: \"80vh\",\r\n    borderRadius: 20,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexDirection: \"column\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: \"100vh\",\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  title: {\r\n    fontSize: \"3rem\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  input: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Login = ({ setUser }) => {\r\n  const [errors, setErrors] = useState({ login: false, password: false });\r\n  const [login, setLogin] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleClick = (e) => {\r\n    const user = validate(login, password);\r\n    if (user) {\r\n      setUser(user);\r\n      history.push(\"/logged\");\r\n    } else setErrors({ login: true, password: true });\r\n  };\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.innerWrapper}>\r\n      <div className={classes.title}>weatherbook</div>\r\n      <div>\r\n        <form className={classes.form} noValidate autoComplete=\"off\">\r\n          <TextField\r\n            error={errors.login}\r\n            className={classes.input}\r\n            id=\"outlined-login\"\r\n            label=\"Login\"\r\n            variant=\"outlined\"\r\n            value={login}\r\n            onChange={(e) => {\r\n              setLogin(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            error={errors.password}\r\n            className={classes.input}\r\n            id=\"outlined-password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <Button variant=\"outlined\" onClick={handleClick}>\r\n            Log IN\r\n          </Button>\r\n        </form>\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  innerWrapper: {\r\n    backgroundColor: \"#dff5ff\",\r\n    width: \"1200px\",\r\n    height: \"80vh\",\r\n    borderRadius: 20,\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: \"100vh\",\r\n      borderRadius: 0,\r\n    },\r\n  },\r\n  notFound: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n}));\r\n\r\nfunction PageNotFound({ user, setUser }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const handleClick = () => {\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <div className={classes.innerWrapper}>\r\n      <div className={classes.notFound}>\r\n        <h1>404</h1>\r\n        <h2>Page not found</h2>\r\n        <div>Back to login page</div>\r\n        <Button variant=\"outlined\" onClick={handleClick}>\r\n          Log in\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Logged from \"./Components/Logged.js\";\nimport Login from \"./Components/Login.js\";\nimport PageNotFound from \"./Components/PageNotFound.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  appWrapper: {\n    boxSizing: \"border-box\",\n    backgroundColor: \"#03a9f4\",\n    width: \"100vw\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Roboto\",\n    padding: theme.spacing(6),\n    [theme.breakpoints.down(\"xs\")]: {\n      padding: 0,\n    },\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [user, setUser] = useState();\n\n  return (\n    <div className={classes.appWrapper}>\n      <Router basename=\"/weatherbook\">\n        <Switch>\n          <Route exact path=\"/logged\">\n            <Logged user={user} />\n          </Route>\n          <Route exact path=\"/\">\n            <Login setUser={setUser} />\n          </Route>\n          <Route path=\"/\">\n            <PageNotFound />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}